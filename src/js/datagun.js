// Generated by CoffeeScript 1.6.3
(function() {
  var Instance, VulnRef, data, http, instance, instanceId, options, querystring, req, url, vulns;

  querystring = require('querystring');

  http = require('http');

  url = require('url');

  vulns = [];

  Instance = (function() {
    function Instance(id, name, regionId, type, vulnRefs) {
      this.id = id;
      this.name = name;
      this.regionId = regionId;
      this.type = type;
      this.vulnRefs = vulnRefs;
    }

    return Instance;

  })();

  VulnRef = (function() {
    function VulnRef(vulnId, vulnType, vulnName, intuit_vuln_definition_id, xref, synopsis, cve, severity, scan_results_xref) {
      this.vulnId = vulnId;
      this.vulnType = vulnType;
      this.vulnName = vulnName;
      this.intuit_vuln_definition_id = intuit_vuln_definition_id;
      this.xref = xref;
      this.synopsis = synopsis;
      this.cve = cve;
      this.severity = severity;
      this.scan_results_xref = scan_results_xref;
    }

    return VulnRef;

  })();

  instanceId = "instance_id_1";

  instance = new Instance(instanceId, "instanceName", "region", "type", [new VulnRef("vulnId", "type", "name", "intuit_vuln_id", "xref", "synopsis", "cve", "1", "xref")]);

  data = querystring.stringify(instance);

  options = {
    host: "localhost",
    port: 8080,
    path: "/cmdb-1.0-SNAPSHOT/v1/vuln/account/" + instanceId,
    method: 'POST',
    headers: {
      'Content-Type': 'application/x-www-form-urlencoded',
      'Content-Length': Buffer.byteLength(data)
    }
  };

  req = http.request(options, function(res) {
    res.setEncoding("utf8");
    return res.on("data", function(chunk) {
      return console.log("body: " + chunk);
    });
  });

  req.write(data);

  req.end();

}).call(this);
